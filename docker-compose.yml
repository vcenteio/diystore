version: "3"

services:
  pg_db:
    image: postgres:latest
    restart: always
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - ${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    depends_on:
      - pg_db
  
  redis:
    image: redis:7.0.4
    restart: always
    command: redis-server ${REDIS_CONF_PATH} --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/var/lib/redis
      - redis_conf:${REDIS_CONF_PATH}

  redis-insight:
    image: redislabs/redisinsight
    restart: always
    ports:
      - ${REDIS_INSIGHT_PORT}:${REDIS_INSIGHT_PORT}
    volumes:
      - redis_insight_data:/db
    depends_on:
      - redis

  app:
    build: ./app
    restart: always
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./app:/app
    environment:
      - HOST=${HOST}
      - PORT=${PORT}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
      - WEB_RELOAD=${WEB_RELOAD}
      - API_APP=${API_APP}
      - API_ENV=${API_ENV}
      - API_CACHE_CONTROL__MAX_AGE=${API_CACHE_CONTROL__MAX_AGE}
      - API_ADD_ETAG=${API_ADD_ETAG}
      - API_REPRESENTATION_TYPE=${API_REPRESENTATION_TYPE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_LOG_QUERIES=${DATABASE_LOG_QUERIES}
      - REDIS_URL=${REDIS_URL}
      - REDIS_DB=0
      - REDIS_TTL=60
    depends_on:
      - pg_db
      - redis
    
volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  redis_conf:
  redis_insight_data: